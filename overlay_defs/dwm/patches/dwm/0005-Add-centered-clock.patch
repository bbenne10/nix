From de9c904723789044c3c1c11444302dda2294597e Mon Sep 17 00:00:00 2001
From: Bryan Bennett <bbenne10@gmail.com>
Date: Thu, 26 Nov 2020 10:04:34 -0500
Subject: [PATCH 05/10] Add centered clock

---
 config.def.h |  4 ++--
 dwm.c        | 29 ++++++++++++++++++++---------
 2 files changed, 22 insertions(+), 11 deletions(-)

diff --git a/config.def.h b/config.def.h
index d7e7b92..191c086 100644
--- a/config.def.h
+++ b/config.def.h
@@ -18,6 +18,7 @@ static const char *colors[][3]      = {
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
 	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
 };
+static const char clock_fmt[] = "%m/%d/%y @ %I:%M %p";
 
 /* tagging */
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
@@ -62,7 +63,7 @@ static const char *termcmd[]  = { "st", NULL };
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
+	{ MODKEY,                       XK_space,  spawn,          {.v = dmenucmd } },
 	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
@@ -80,7 +81,6 @@ static Key keys[] = {
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
 	{ MODKEY|ShiftMask,             XK_0,      tag,            {.ui = ~0 } },
diff --git a/dwm.c b/dwm.c
index ea7cfac..63c44cf 100644
--- a/dwm.c
+++ b/dwm.c
@@ -761,19 +761,24 @@ dirtomon(int dir)
 void
 drawbar(Monitor *m)
 {
-	int x, w, tw = 0;
+	int x, w, tw, clockw = 0;
 	int boxs = drw->font->h / 9;
 	int boxw = drw->font->h / 6 + 2;
+	time_t current;
+	char clock[38];
 	unsigned int i, occ = 0, urg = 0;
 	Client *c;
 
-	/* draw status first so it can be overdrawn by tags later */
+	/* draw status text
+	 * drawn first so it can be overdrawn by tags later
+	 */
 	if (m == selmon) { /* status is only drawn on selected monitor */
 		drw_setscheme(drw, scheme[SchemeNorm]);
 		tw = TEXTW(stext) - lrpad + 2; /* 2px right padding */
 		drw_text(drw, m->ww - tw, 0, tw, bh, 0, stext, 0, True);
 	}
 
+	// draw tags
 	for (c = m->clients; c; c = c->next) {
 		occ |= c->tags;
 		if (c->isurgent)
@@ -790,18 +795,24 @@ drawbar(Monitor *m)
 				urg & 1 << i);
 		x += w;
 	}
+
+	// draw the layout symbol
 	w = blw = TEXTW(m->ltsymbol);
 	drw_setscheme(drw, scheme[SchemeNorm]);
 	x = drw_text(drw, x, 0, w, bh, lrpad / 2, m->ltsymbol, 0, False);
 
-	if ((w = m->ww - sw - x) > bh) {
-		if (m->sel) {
-			drw_setscheme(drw, scheme[m == selmon ? SchemeSel : SchemeNorm]);
-			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0, False);
-			if (m->sel->isfloating)
-				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
+	// draw the clock
+	if ((w = m->ww - tw - x) > bh) {
+		if (m == selmon) {
+			time(&current);
+			strftime(clock, 38, clock_fmt, localtime(&current));
+			clockw = TEXTW(clock);
+
+			drw_text(drw, x, 0, w, bh, 0, "", 0, False);
+			w = MIN(w, clockw);
+			x = MAX(x, (m->mw / 2) - (clockw / 2));
+			drw_text(drw, x, 0, w, bh, 0, clock, 0, False);
 		} else {
-			drw_setscheme(drw, scheme[SchemeNorm]);
 			drw_rect(drw, x, 0, w, bh, 1, 1);
 		}
 	}
-- 
2.25.4

